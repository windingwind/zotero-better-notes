title = Редактор шаблонов

templateType = Template Type

templateType-item =
    .label = Item
templateType-text =
    .label = Text
templateType-system =
    .label = Builtin
templateType-unknown =
    .label = ?
templateType-help =
    .label = ?
    .title = Detailed explanation of template types

templateName = Имя шаблона

previewContainer = 
    .label = Предпросмотр
create = 
    .label = Новая
save = 
    .label = Сохранить
delete = 
    .label = Удалить
reset = 
    .label = Сброс
share = 
    .label = Share
    .tooltiptext = Copy template share code to clipboard
more = 
    .label = Больше шаблонов
    .title = Get more templates online

options = 
    .label = Options
importClipboard = 
    .label = Import template: from template share code in clipboard
importNote = 
    .label = Import template: from existing note
backup = 
    .label = Export backup file
restore = 
    .label = Restore from backup file
help = 
    .label = Помощь

format-bold = 
    .title = Bold
format-italic =
    .title = Italic
format-strikethrough =
    .title = Strike-through
format-underline =
    .title = Underline
format-superscript =
    .title = Superscript
format-subscript =
    .title = Subscript
format-textColor =
    .title = Text color
format-link =
    .title = Link
format-quote =
    .title = Quote
format-monospaced =
    .title = Monospace
format-code =
    .title = Code block
format-table =
    .title = Table
format-h1 =
    .title = Level 1 heading
format-h2 =
    .title = Level 2 heading
format-h3 =
    .title = Level 3 heading
format-bullet =
    .title = Bullet list
format-numbered =
    .title = Numbered list
format-inlineMath =
    .title = Inline math formula
format-blockMath =
    .title = Multi-line math formula
format-inlineScript =
    .title = Add an inline JS script, the result of which will be embedded in the note
format-blockScript =
    .title = Add a multi-line async JS script, the return value of which will be embedded in the note

snippet-useMarkdown = use markdown
    .title = Parse the template as markdown
snippet-useRefresh = use refresh
    .title = Allow the content generated by the template to be refreshed
snippet-dryRunFlag = dry run flag
    .title = Check if the template is running in dry run mode, e.g. for preview. In dry run mode, the script should not have side effects.
snippet-itemBeforeLoop = before loop
    .title = Content to be rendered before the loop of items
snippet-itemInLoop = in loop
    .title = Content to be rendered for each item in the loop
snippet-itemAfterLoop = after loop
    .title = Content to be rendered after the loop of items

-variable-type = Type
-variable-item = Zotero.Item
-variable-note = Zotero.NoteItem
-variable-annotation = Zotero.AnnotationItem
-variable-string = string
-variable-object = object
-variable-function = function

snippet-itemItems = items
    .title = { -variable-type }: { -variable-item }[]. The array of items to be rendered, available in beforeLoop and afterLoop stage
snippet-itemItem = item
    .title = { -variable-type }: { -variable-item }. The current item to be rendered, available in inLoop stage
snippet-itemTopItem = top item
    .title = { -variable-type }: { -variable-item }. The top-level parent of the variable `item`, available in inLoop stage
snippet-itemTargetNoteItem = target note
    .title = { -variable-type }: { -variable-note }. The note item to which the template is attached, available in any stage
snippet-itemCopyNoteImage = copy note image
    .title = { -variable-type }: { -variable-function }. Copy the image of the note to the clipboard, available in any stage
snippet-itemSharedObj = shared object
    .title = { -variable-type }: { -variable-object }. A shared object that can be used to store data across different stages
snippet-itemFieldTitle = title
    .title = { -variable-type }: { -variable-string }. The title of the top item
snippet-itemFieldAbstract = abstract
    .title = { -variable-type }: { -variable-string }. The abstract of the top item
snippet-itemFieldCitKey = citation key
    .title = { -variable-type }: { -variable-string }. The citation key of the top item
snippet-itemFieldDate = date
    .title = { -variable-type }: { -variable-string }. The publication date of the top item
snippet-itemFieldDOI = DOI
    .title = { -variable-type }: { -variable-string }. The DOI of the top item
snippet-itemFieldDOIURL = DOI or URL
    .title = { -variable-type }: { -variable-string }. The DOI or URL of the top item
snippet-itemFieldAuthors = authors
    .title = { -variable-type }: { -variable-string }. The authors of the top item
snippet-itemFieldJournal = journal
    .title = { -variable-type }: { -variable-string }. The journal of the top item
snippet-itemFieldTitleTranslation = title translation
    .title = { -variable-type }: { -variable-string }. The title translation of the top item
snippet-textTargetNoteItem = target note
    .title = { -variable-type }: { -variable-note }. The note item to which the template is attached
snippet-textSharedObj = shared object
    .title = { -variable-type }: { -variable-object }. A shared object that can be used to store data
snippet-quickInsertLink = note link
    .title = { -variable-type }: { -variable-string }. The link of the note item to be linked
snippet-quickInsertLinkText = link text
    .title = { -variable-type }: { -variable-string }. The default label of the link
snippet-quickInsertSubNoteItem = linked note
    .title = { -variable-type }: { -variable-note }. The note item to be linked to
snippet-quickInsertNoteItem = target note
    .title = { -variable-type }: { -variable-note }. The note item to which the template is attached
snippet-quickImportLink = note link
    .title = { -variable-type }: { -variable-string }. The link of the note item to be imported
snippet-quickImportNoteItem = target note
    .title = { -variable-type }: { -variable-note }. The note item to which the template is attached
snippet-quickNoteAnnotationItem = annotation
    .title = { -variable-type }: { -variable-annotation }. The annotation item to be converted to a note
snippet-quickNoteTopItem = top item
    .title = { -variable-type }: { -variable-item }. The top-level parent of the variable `annotationItem`
snippet-quickNoteNoteItem = target note
    .title = { -variable-type }: { -variable-note }. The note item to which the template is attached
snippet-exportMDFileNameNoteItem = target note
    .title = { -variable-type }: { -variable-note }. The note item to be exported
snippet-exportMDFileHeaderNoteItem = target note
    .title = { -variable-type }: { -variable-note }. The note item to be exported
snippet-exportMDFileContentNoteItem = target note
    .title = { -variable-type }: { -variable-note }. The note item to be exported
snippet-exportMDFileContentMDContent = markdown content
    .title = { -variable-type }: { -variable-string }. The markdown content to be exported
snippet-exportLatexFileContentNoteItem = target note
    .title = { -variable-type }: { -variable-note }. The note item to be exported
snippet-exportLatexFileContentLatexContent = latex content
    .title = { -variable-type }: { -variable-string }. The latex content to be exported
